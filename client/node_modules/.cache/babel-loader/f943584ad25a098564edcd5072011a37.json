{"ast":null,"code":"var _jsxFileName = \"/Users/paras/Documents/blockchain-based-authentication/client/src/components/SignUp.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\nimport AuthenticationHash from '../utils/AuthenticationHash';\nimport \"../App.css\";\n\nclass SignUp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: '',\n      password: '',\n      digicode: '',\n      alertMessage: '',\n      status: '',\n      signedUp: false\n    };\n\n    this.onSignUp = async () => {\n      //this.setState({ signedUp: false });\n      if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\n        let username = this.state.username.trim();\n        let password = this.state.password.trim();\n        let digicode = this.state.digicode.trim(); //===\n\n        if (password.length < 8) {\n          this.setState({\n            alertMessage: \"at least 8 characters for password\",\n            status: 'failed',\n            password: '',\n            digicode: ''\n          });\n          return;\n        } else {}\n\n        if (digicode.length !== 6) {\n          this.setState({\n            alertMessage: \"6 digit required for digicode\",\n            status: 'failed',\n            digicode: ''\n          });\n          return;\n        } else {\n          let userAddress = await this.props.contract.methods.getUserAddress().call({\n            from: this.props.account\n          });\n\n          if (userAddress !== '0x0000000000000000000000000000000000000000') {\n            this.setState({\n              alertMessage: 'this account already exists',\n              status: 'failed',\n              username: '',\n              password: '',\n              digicode: ''\n            });\n            return;\n          } else {\n            let hash = await AuthenticationHash(username, this.props.account, password, digicode, this.props.web3);\n            await this.props.contract.methods.register(hash).send({\n              from: this.props.account\n            });\n            this.setState({\n              username: '',\n              password: '',\n              digicode: '',\n              status: 'success',\n              alertMessage: \"Signup successful\",\n              signedUp: true\n            });\n            this.props.accountCreated(this.state.signedUp);\n            return;\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, \"Create an account\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, this.state.alertMessage !== '' && this.state.status === 'failed' ? /*#__PURE__*/React.createElement(Message, {\n      negative: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, this.state.alertMessage) : this.state.alertMessage !== '' && this.state.status === 'success' ? /*#__PURE__*/React.createElement(Message, {\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 45\n      }\n    }, this.state.alertMessage) : console.log(''), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"username\",\n      value: this.state.username,\n      autoComplete: \"username\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      autoComplete: \"current-password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"6 digit code\",\n      value: this.state.digicode,\n      autoComplete: \"digicode\",\n      onChange: e => this.setState({\n        digicode: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      onClick: this.onSignUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, \"Create account\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin-onUp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 50\n      }\n    }, \"Sign in\"))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"names":["React","Component","Link","Form","Button","Card","Message","AuthenticationHash","SignUp","state","username","password","digicode","alertMessage","status","signedUp","onSignUp","trim","length","setState","userAddress","props","contract","methods","getUserAddress","call","from","account","hash","web3","register","send","accountCreated","render","console","log","e","target","value"],"sources":["/Users/paras/Documents/blockchain-based-authentication/client/src/components/SignUp.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\nimport AuthenticationHash from '../utils/AuthenticationHash';\nimport \"../App.css\";\n\nclass SignUp extends Component {\n    state = {\n        username: '',\n        password: '',\n        digicode: '',\n        alertMessage: '',\n        status: '',\n        signedUp: false\n    }\n\n    onSignUp = async () => {\n        //this.setState({ signedUp: false });\n\n        if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\n            let username = this.state.username.trim();\n            let password = this.state.password.trim();\n            let digicode = this.state.digicode.trim();\n\n            //===\n            if (password.length < 8) {\n                this.setState({\n                    alertMessage: \"at least 8 characters for password\",\n                    status: 'failed',\n                    password: '',\n                    digicode: '',\n                });\n                return;\n            } else {\n\n            } if (digicode.length !== 6) {\n                this.setState({\n                    alertMessage: \"6 digit required for digicode\",\n                    status: 'failed',\n                    digicode: ''\n                });\n                return\n            } else {\n                let userAddress = await this.props.contract.methods.getUserAddress()\n                    .call({ from: this.props.account });\n\n                if (userAddress !== '0x0000000000000000000000000000000000000000') {\n                    this.setState({\n                        alertMessage: 'this account already exists',\n                        status: 'failed',\n                        username: '',\n                        password: '',\n                        digicode: '',\n                    });\n\n                    return;\n                } else {\n                    let hash = await AuthenticationHash(username, this.props.account, password, digicode, this.props.web3);\n\n                    await this.props.contract.methods.register(hash).send({ from: this.props.account });\n\n                    this.setState({\n                        username: '',\n                        password: '',\n                        digicode: '',\n                        status: 'success',\n                        alertMessage: \"Signup successful\",\n                        signedUp: true\n                    });\n\n                    this.props.accountCreated(this.state.signedUp);\n                    return;\n                }\n            }\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"sign-up\">\n                Create an account\n                <div className='signup-form'>\n                    <Card fluid centered>\n                        <Card.Content>\n                            <Form size='large'>\n                                {\n                                    this.state.alertMessage !== '' && this.state.status === 'failed' ?\n                                        <Message negative>\n                                            {this.state.alertMessage}\n                                        </Message> :\n                                        this.state.alertMessage !== '' && this.state.status === 'success' ?\n                                            <Message positive>\n                                                {this.state.alertMessage}\n                                            </Message> :\n                                            console.log('')\n                                }\n                                <Form.Field>\n                                    <input\n                                        required\n                                        type='text'\n                                        placeholder='username'\n                                        value={this.state.username}\n                                        autoComplete=\"username\"\n                                        onChange={e => this.setState({ username: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <input\n                                        required\n                                        type='password'\n                                        placeholder='password'\n                                        value={this.state.password}\n                                        autoComplete=\"current-password\"\n                                        onChange={e => this.setState({ password: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <input\n                                        required\n                                        type='text'\n                                        placeholder='6 digit code'\n                                        value={this.state.digicode}\n                                        autoComplete=\"digicode\"\n                                        onChange={e => this.setState({ digicode: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Button type='submit' primary fluid size='large' onClick={this.onSignUp}>\n                                        Create account\n                                    </Button>\n                                </Form.Field>\n                            </Form>\n                        </Card.Content>\n                    </Card>\n                    <div className=\"signin-onUp\">\n                        Already have an account? <Link to='/sign-in'>Sign in</Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignUp\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}