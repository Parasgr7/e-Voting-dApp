{"ast":null,"code":"var _jsxFileName = \"/Users/paras/Documents/blockchain-based-authentication/client/src/components/SignIn.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\nimport AuthValidation from '../utils/AuthValidation';\nimport \"../App.css\";\n\nclass SignIn extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: '',\n      password: '',\n      digicode: '',\n      alertMessage: '',\n      status: '',\n      loggedIn: false\n    };\n\n    this.onSignIn = async () => {\n      if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\n        let username = this.state.username.trim();\n        let password = this.state.password.trim();\n        let digicode = this.state.digicode.trim();\n        let usernameToSend = username; //===\n\n        if (password.length < 8) {\n          this.setState({\n            alertMessage: \"at least 8 characters for password\",\n            status: 'failed',\n            password: '',\n            digicode: ''\n          });\n          return;\n        } else {}\n\n        if (digicode.length !== 6) {\n          this.setState({\n            alertMessage: \"6 digit required for digicode\",\n            status: 'failed',\n            digicode: ''\n          });\n          return;\n        } else {\n          let userAddress = await this.props.contract.methods.getUserAddress().call({\n            from: this.props.account\n          });\n\n          if (userAddress === '0x0000000000000000000000000000000000000000') {\n            this.setState({\n              alertMessage: 'Account does not exists',\n              status: 'failed',\n              username: '',\n              password: '',\n              digicode: ''\n            });\n            return;\n          } else {\n            let validated = await AuthValidation(username, this.props.account, password, digicode, this.props.web3, this.props.contract);\n\n            if (!validated) {\n              this.setState({\n                alertMessage: 'Incorrect log in',\n                status: 'failed',\n                username: '',\n                password: '',\n                digicode: ''\n              });\n              return;\n            } else {\n              this.setState({\n                username: '',\n                password: '',\n                digicode: '',\n                status: 'success',\n                alertMessage: \"Sign in successful\",\n                loggedIn: true\n              });\n              this.props.userSignedIn(this.state.loggedIn, usernameToSend);\n              return;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        username: '',\n        password: '',\n        digicode: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Sign in to your account\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, this.state.alertMessage !== '' && this.state.status === 'failed' ? /*#__PURE__*/React.createElement(Message, {\n      negative: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }, this.state.alertMessage) : this.state.alertMessage !== '' && this.state.status === 'success' ? /*#__PURE__*/React.createElement(Message, {\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 45\n      }\n    }, this.state.alertMessage) : console.log(''), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: this.state.username,\n      autoComplete: \"username\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      autoComplete: \"current-password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"6 digit code\",\n      value: this.state.digicode,\n      autoComplete: \"digicode\",\n      onChange: e => this.setState({\n        digicode: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      onClick: this.onSignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, \"Sign in\"))))), this.props.signedUp ? console.log() : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signin-onUp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 56\n      }\n    }, \"Sign up\"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"names":["React","Component","Link","Form","Button","Card","Message","AuthValidation","SignIn","state","username","password","digicode","alertMessage","status","loggedIn","onSignIn","trim","usernameToSend","length","setState","userAddress","props","contract","methods","getUserAddress","call","from","account","validated","web3","userSignedIn","render","console","log","e","target","value","signedUp"],"sources":["/Users/paras/Documents/blockchain-based-authentication/client/src/components/SignIn.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\nimport AuthValidation from '../utils/AuthValidation';\nimport \"../App.css\";\n\nclass SignIn extends Component {\n    state = {\n        username: '',\n        password: '',\n        digicode: '',\n        alertMessage: '',\n        status: '',\n        loggedIn: false\n    }\n\n    onSignIn = async () => {\n\n        if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\n            let username = this.state.username.trim();\n            let password = this.state.password.trim();\n            let digicode = this.state.digicode.trim();\n\n            let usernameToSend = username;\n\n            //===\n            if (password.length < 8) {\n                this.setState({\n                    alertMessage: \"at least 8 characters for password\",\n                    status: 'failed',\n                    password: '',\n                    digicode: '',\n                });\n                return;\n            } else {\n\n            } if (digicode.length !== 6) {\n                this.setState({\n                    alertMessage: \"6 digit required for digicode\",\n                    status: 'failed',\n                    digicode: ''\n                });\n                return\n            } else {\n                let userAddress = await this.props.contract.methods.getUserAddress()\n                    .call({ from: this.props.account });\n\n                if (userAddress === '0x0000000000000000000000000000000000000000') {\n                    this.setState({\n                        alertMessage: 'Account does not exists',\n                        status: 'failed',\n                        username: '',\n                        password: '',\n                        digicode: '',\n                    });\n                    return;\n                } else {\n                    let validated = await\n                        AuthValidation(\n                            username,\n                            this.props.account,\n                            password, digicode,\n                            this.props.web3,\n                            this.props.contract\n                        );\n\n                    if (!validated) {\n                        this.setState({\n                            alertMessage: 'Incorrect log in',\n                            status: 'failed',\n                            username: '',\n                            password: '',\n                            digicode: '',\n                        });\n                        return\n                    } else {\n                        this.setState({\n                            username: '',\n                            password: '',\n                            digicode: '',\n                            status: 'success',\n                            alertMessage: \"Sign in successful\",\n                            loggedIn: true\n                        });\n\n                        this.props.userSignedIn(\n                            this.state.loggedIn,\n                            usernameToSend\n                        );\n\n                        return;\n                    }\n                }\n            }\n        }\n\n\n        this.setState({\n            username: '',\n            password: '',\n            digicode: ''\n        })\n    }\n    render() {\n        return (\n            <div className=\"sign-up\">\n                Sign in to your account\n                <div className='signup-form'>\n                    <Card fluid centered>\n                        <Card.Content>\n                            <Form size='large'>\n                                {\n                                    this.state.alertMessage !== '' && this.state.status === 'failed' ?\n                                        <Message negative>\n                                            {this.state.alertMessage}\n                                        </Message> :\n                                        this.state.alertMessage !== '' && this.state.status === 'success' ?\n                                            <Message positive>\n                                                {this.state.alertMessage}\n                                            </Message> :\n                                            console.log('')\n                                }\n                                <Form.Field required>\n                                    <input\n                                        type='text'\n                                        placeholder='username'\n                                        value={this.state.username}\n                                        autoComplete=\"username\"\n                                        onChange={e => this.setState({ username: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <input\n                                        type='password'\n                                        placeholder='password'\n                                        value={this.state.password}\n                                        autoComplete=\"current-password\"\n                                        onChange={e => this.setState({ password: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field required>\n                                    <input\n                                        type='text'\n                                        placeholder='6 digit code'\n                                        value={this.state.digicode}\n                                        autoComplete=\"digicode\"\n                                        onChange={e => this.setState({ digicode: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Button type='submit' primary fluid size='large' onClick={this.onSignIn}>\n                                        Sign in\n                                    </Button>\n                                </Form.Field>\n\n                            </Form>\n                        </Card.Content>\n                    </Card>\n                    {\n                        this.props.signedUp ?\n                            console.log() :\n                            <div className=\"signin-onUp\">\n                                Don't have an account? <Link to='/sign-up'>Sign up</Link>\n                            </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignIn\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}